
{
    "name": "policy-monitoring",
    "type": "Microsoft.Authorization/policySetDefinitions",
    "apiVersion": "2019-09-01",
    "properties": {
      "description": "This initiative configures application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace.",
      "displayName": "policy-monitoring",
      "parameters": {
        "logAnalytics": {
          "metadata": {
            "description": "Select the Log Analytics workspace from dropdown list",
            "displayName": "Log Analytics workspace",
            "strongType": "omsWorkspace"
          },
          "type": "String"
        }
      },
      "policyDefinitionGroups": null,
      "policyDefinitions": [
        {
          "policyDefinitionReferenceId": "mon-{false [AccountLogon AccountManagement DetailTracking DirectoryServiceAccess LogonLogoff ObjectAccess PolicyChange PrivilegeUse SystemSecurity] Microsoft.AAD/DomainServices msftaaddomainservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftaaddomainservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Signin] microsoft.aadiam/tenants msftaadiamtenants}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftaadiamtenants",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Engine Service] Microsoft.AnalysisServices/servers msftanalysisservicesservers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftanalysisservicesservers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [GatewayLogs] Microsoft.ApiManagement/service msftapimanagementservice}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftapimanagementservice",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [HttpRequest] Microsoft.AppConfiguration/configurationStores msftappconfigurationconfigurationstores}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftappconfigurationconfigurationstores",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ApplicationConsole SystemLogs] Microsoft.AppPlatform/Spring msftappplatformspring}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftappplatformspring",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [AuditEvent ERR INF WRN] Microsoft.Attestation/attestationProviders msftattestationattestationproviders}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftattestationattestationproviders",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DscNodeStatus JobLogs JobStreams] Microsoft.Automation/automationAccounts msftautomationautomationaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftautomationautomationaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Audit Operational] Microsoft.AutonomousDevelopmentPlatform/accounts msftautonomousdevelopmentplatformaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftautonomousdevelopmentplatformaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ServiceLog] Microsoft.Batch/batchAccounts msftbatchbatchaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftbatchbatchaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [BaiClusterEvent BaiClusterNodeEvent BaiJobEvent] Microsoft.BatchAI/workspaces msftbatchaiworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftbatchaiworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [BlockchainApplication FabricOrderer FabricPeer Proxy] Microsoft.Blockchain/blockchainMembers msftblockchainblockchainmembers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftblockchainblockchainmembers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [BlockchainApplication] Microsoft.Blockchain/cordaMembers msftblockchaincordamembers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftblockchaincordamembers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [BotRequest] microsoft.botservice/botservices msftbotservicebotservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftbotservicebotservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [WebApplicationFirewallLogs] Microsoft.Cdn/cdnwebapplicationfirewallpolicies msftcdncdnwebapplicationfirewallpolicies}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcdncdnwebapplicationfirewallpolicies",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AzureCdnAccessLog FrontDoorAccessLog FrontDoorHealthProbeLog FrontDoorWebApplicationFirewallLog] Microsoft.Cdn/profiles msftcdnprofiles}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcdnprofiles",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [CoreAnalytics] Microsoft.Cdn/profiles/endpoints msftcdnprofilesendpoints}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcdnprofilesendpoints",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Network Security Group Rule Flow Event] Microsoft.ClassicNetwork/networksecuritygroups msftclassicnetworknetworksecuritygroups}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftclassicnetworknetworksecuritygroups",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Audit RequestResponse Trace] Microsoft.CognitiveServices/accounts msftcognitiveservicesaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcognitiveservicesaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AuthOperational ChatOperational SMSOperational Usage] Microsoft.Communication/CommunicationServices msftcommunicationcommunicationservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcommunicationcommunicationservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ContainerRegistryLoginEvents ContainerRegistryRepositoryEvents] Microsoft.ContainerRegistry/registries msftcontainerregistryregistries}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcontainerregistryregistries",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [cluster-autoscaler guard kube-apiserver kube-audit kube-audit-admin kube-controller-manager kube-scheduler] Microsoft.ContainerService/managedClusters msftcontainerservicemanagedclusters}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcontainerservicemanagedclusters",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AuditLogs] Microsoft.CustomProviders/resourceproviders msftcustomprovidersresourceproviders}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftcustomprovidersresourceproviders",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Audit Operational] Microsoft.D365CustomerInsights/instances msftd365customerinsightsinstances}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftd365customerinsightsinstances",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [accounts clusters dbfs instancePools jobs notebook secrets sqlPermissions ssh workspace] Microsoft.Databricks/workspaces msftdatabricksworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdatabricksworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [CollaborationAudit DataAssets Pipelines Proposals Scripts] Microsoft.DataCollaboration/workspaces msftdatacollaborationworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdatacollaborationworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ActivityRuns PipelineRuns SandboxActivityRuns SandboxPipelineRuns SSISIntegrationRuntimeLogs SSISPackageEventMessageContext SSISPackageEventMessages SSISPackageExecutableStatistics SSISPackageExecutionComponentPhases SSISPackageExecutionDataStatistics TriggerRuns] Microsoft.DataFactory/factories msftdatafactoryfactories}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdatafactoryfactories",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Audit Requests] Microsoft.DataLakeAnalytics/accounts msftdatalakeanalyticsaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdatalakeanalyticsaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Audit Requests] Microsoft.DataLakeStore/accounts msftdatalakestoreaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdatalakestoreaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ReceivedShareSnapshots SentShareSnapshots Shares ShareSubscriptions] Microsoft.DataShare/accounts msftdatashareaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdatashareaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [MySqlAuditLogs MySqlSlowLogs] Microsoft.DBforMariaDB/servers msftdbformariadbservers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbformariadbservers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [MySqlAuditLogs MySqlSlowLogs] Microsoft.DBforMySQL/flexibleServers msftdbformysqlflexibleservers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbformysqlflexibleservers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [MySqlAuditLogs MySqlSlowLogs] Microsoft.DBforMySQL/servers msftdbformysqlservers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbformysqlservers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [PostgreSQLLogs] Microsoft.DBforPostgreSQL/flexibleServers msftdbforpostgresqlflexibleservers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbforpostgresqlflexibleservers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [PostgreSQLLogs] Microsoft.DBForPostgreSQL/serverGroupsv2 msftdbforpostgresqlservergroupsv2}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbforpostgresqlservergroupsv2",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [PostgreSQLLogs QueryStoreRuntimeStatistics QueryStoreWaitStatistics] Microsoft.DBforPostgreSQL/servers msftdbforpostgresqlservers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbforpostgresqlservers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [PostgreSQLLogs] Microsoft.DBforPostgreSQL/serversv2 msftdbforpostgresqlserversv2}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdbforpostgresqlserversv2",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Checkpoint Error Management] Microsoft.DesktopVirtualization/applicationgroups msftdesktopvirtualizationapplicationgroups}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdesktopvirtualizationapplicationgroups",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [AgentHealthStatus Checkpoint Connection Error HostRegistration Management] Microsoft.DesktopVirtualization/hostpools msftdesktopvirtualizationhostpools}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdesktopvirtualizationhostpools",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Checkpoint Error Feed Management] Microsoft.DesktopVirtualization/workspaces msftdesktopvirtualizationworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdesktopvirtualizationworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [C2DCommands C2DTwinOperations Configurations Connections D2CTwinOperations DeviceIdentityOperations DeviceStreams DeviceTelemetry DirectMethods DistributedTracing FileUploadOperations JobsOperations Routes TwinQueries] Microsoft.Devices/ElasticPools/IotHubTenants msftdeviceselasticpoolsiothubtenants}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdeviceselasticpoolsiothubtenants",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [C2DCommands C2DTwinOperations Configurations Connections D2CTwinOperations DeviceIdentityOperations DeviceStreams DeviceTelemetry DirectMethods DistributedTracing FileUploadOperations JobsOperations Routes TwinQueries] Microsoft.Devices/IotHubs msftdevicesiothubs}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdevicesiothubs",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DeviceOperations ServiceOperations] Microsoft.Devices/provisioningServices msftdevicesprovisioningservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdevicesprovisioningservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DigitalTwinsOperation EventRoutesOperation ModelsOperation QueryOperation] Microsoft.DigitalTwins/digitalTwinsInstances msftdigitaltwinsdigitaltwinsinstances}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdigitaltwinsdigitaltwinsinstances",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [CassandraRequests ControlPlaneRequests DataPlaneRequests GremlinRequests MongoRequests PartitionKeyRUConsumption PartitionKeyStatistics QueryRuntimeStatistics] Microsoft.DocumentDB/databaseAccounts msftdocumentdbdatabaseaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftdocumentdbdatabaseaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DeliveryFailures PublishFailures] Microsoft.EventGrid/domains msfteventgriddomains}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfteventgriddomains",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DeliveryFailures PublishFailures] Microsoft.EventGrid/partnerNamespaces msfteventgridpartnernamespaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfteventgridpartnernamespaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DeliveryFailures] Microsoft.EventGrid/partnerTopics msfteventgridpartnertopics}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfteventgridpartnertopics",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DeliveryFailures] Microsoft.EventGrid/systemTopics msfteventgridsystemtopics}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfteventgridsystemtopics",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DeliveryFailures PublishFailures] Microsoft.EventGrid/topics msfteventgridtopics}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfteventgridtopics",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ArchiveLogs AutoScaleLogs CustomerManagedKeyUserLogs EventHubVNetConnectionEvent KafkaCoordinatorLogs KafkaUserErrorLogs OperationalLogs] Microsoft.EventHub/namespaces msfteventhubnamespaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfteventhubnamespaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Request] microsoft.experimentation/experimentWorkspaces msftexperimentationexperimentworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftexperimentationexperimentworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AuditLogs] Microsoft.HealthcareApis/services msfthealthcareapisservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfthealthcareapisservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AutoscaleEvaluations AutoscaleScaleActions] microsoft.insights/autoscalesettings msftinsightsautoscalesettings}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftinsightsautoscalesettings",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AppAvailabilityResults AppBrowserTimings AppDependencies AppEvents AppExceptions AppMetrics AppPageViews AppPerformanceCounters AppRequests AppSystemEvents AppTraces] Microsoft.Insights/Components msftinsightscomponents}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftinsightscomponents",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AuditEvent] microsoft.keyvault/managedhsms msftkeyvaultmanagedhsms}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftkeyvaultmanagedhsms",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AuditEvent] Microsoft.KeyVault/vaults msftkeyvaultvaults}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftkeyvaultvaults",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Command FailedIngestion IngestionBatching Query SucceededIngestion TableDetails TableUsageStatistics] Microsoft.Kusto/Clusters msftkustoclusters}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftkustoclusters",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [IntegrationAccountTrackingEvents] Microsoft.Logic/integrationAccounts msftlogicintegrationaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftlogicintegrationaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [WorkflowRuntime] Microsoft.Logic/workflows msftlogicworkflows}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftlogicworkflows",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AmlComputeClusterEvent AmlComputeClusterNodeEvent AmlComputeCpuGpuUtilization AmlComputeJobEvent AmlRunStatusChangedEvent] Microsoft.MachineLearningServices/workspaces msftmachinelearningservicesworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftmachinelearningservicesworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [KeyDeliveryRequests] Microsoft.Media/mediaservices msftmediamediaservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftmediamediaservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ApplicationGatewayAccessLog ApplicationGatewayFirewallLog ApplicationGatewayPerformanceLog] Microsoft.Network/applicationGateways msftnetworkapplicationgateways}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkapplicationgateways",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AzureFirewallApplicationRule AzureFirewallDnsProxy AzureFirewallNetworkRule] Microsoft.Network/azurefirewalls msftnetworkazurefirewalls}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkazurefirewalls",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [BastionAuditLogs] Microsoft.Network/bastionHosts msftnetworkbastionhosts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkbastionhosts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [PeeringRouteLog] Microsoft.Network/expressRouteCircuits msftnetworkexpressroutecircuits}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkexpressroutecircuits",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [FrontdoorAccessLog FrontdoorWebApplicationFirewallLog] Microsoft.Network/frontdoors msftnetworkfrontdoors}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkfrontdoors",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [LoadBalancerAlertEvent LoadBalancerProbeHealthStatus] Microsoft.Network/loadBalancers msftnetworkloadbalancers}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkloadbalancers",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [NetworkSecurityGroupEvent NetworkSecurityGroupFlowEvent NetworkSecurityGroupRuleCounter] Microsoft.Network/networksecuritygroups msftnetworknetworksecuritygroups}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworknetworksecuritygroups",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [GatewayDiagnosticLog IKEDiagnosticLog P2SDiagnosticLog] Microsoft.Network/p2sVpnGateways msftnetworkp2svpngateways}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkp2svpngateways",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DDoSMitigationFlowLogs DDoSMitigationReports DDoSProtectionNotifications] Microsoft.Network/publicIPAddresses msftnetworkpublicipaddresses}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkpublicipaddresses",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ProbeHealthStatusEvents] Microsoft.Network/trafficManagerProfiles msftnetworktrafficmanagerprofiles}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworktrafficmanagerprofiles",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [GatewayDiagnosticLog IKEDiagnosticLog P2SDiagnosticLog RouteDiagnosticLog TunnelDiagnosticLog] Microsoft.Network/virtualNetworkGateways msftnetworkvirtualnetworkgateways}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkvirtualnetworkgateways",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [VMProtectionAlerts] Microsoft.Network/virtualNetworks msftnetworkvirtualnetworks}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkvirtualnetworks",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [GatewayDiagnosticLog IKEDiagnosticLog RouteDiagnosticLog TunnelDiagnosticLog] Microsoft.Network/vpnGateways msftnetworkvpngateways}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnetworkvpngateways",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [OperationalLogs] Microsoft.NotificationHubs/namespaces msftnotificationhubsnamespaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftnotificationhubsnamespaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Audit] Microsoft.OperationalInsights/workspaces msftoperationalinsightsworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftoperationalinsightsworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Engine] Microsoft.PowerBI/tenants msftpowerbitenants}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftpowerbitenants",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Engine] Microsoft.PowerBI/tenants/workspaces msftpowerbitenantsworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftpowerbitenantsworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Engine] Microsoft.PowerBIDedicated/capacities msftpowerbidedicatedcapacities}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftpowerbidedicatedcapacities",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [ScanStatusLogEvent] microsoft.purview/accounts msftpurviewaccounts}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftpurviewaccounts",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [AddonAzureBackupAlerts AddonAzureBackupJobs AddonAzureBackupPolicy AddonAzureBackupProtectedInstance AddonAzureBackupStorage AzureBackupReport AzureSiteRecoveryEvents AzureSiteRecoveryJobs AzureSiteRecoveryProtectedDiskDataChurn AzureSiteRecoveryRecoveryPoints AzureSiteRecoveryReplicatedItems AzureSiteRecoveryReplicationDataUploadRate AzureSiteRecoveryReplicationStats CoreAzureBackup] Microsoft.RecoveryServices/Vaults msftrecoveryservicesvaults}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftrecoveryservicesvaults",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [HybridConnectionsEvent HybridConnectionsLogs] Microsoft.Relay/namespaces msftrelaynamespaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftrelaynamespaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [OperationLogs] Microsoft.Search/searchServices msftsearchsearchservices}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsearchsearchservices",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [OperationalLogs] Microsoft.ServiceBus/namespaces msftservicebusnamespaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftservicebusnamespaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AllLogs] Microsoft.SignalRService/SignalR msftsignalrservicesignalr}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsignalrservicesignalr",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AllLogs] Microsoft.SignalRService/WebPubSub msftsignalrservicewebpubsub}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsignalrservicewebpubsub",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DevOpsOperationsAudit ResourceUsageStats SQLSecurityAuditEvents] Microsoft.Sql/managedInstances msftsqlmanagedinstances}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsqlmanagedinstances",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [Errors QueryStoreRuntimeStatistics QueryStoreWaitStatistics SQLInsights] Microsoft.Sql/managedInstances/databases msftsqlmanagedinstancesdatabases}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsqlmanagedinstancesdatabases",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AutomaticTuning Blocks DatabaseWaitStatistics Deadlocks DevOpsOperationsAudit DmsWorkers Errors ExecRequests QueryStoreRuntimeStatistics QueryStoreWaitStatistics RequestSteps SQLInsights SqlRequests SQLSecurityAuditEvents Timeouts Waits] Microsoft.Sql/servers/databases msftsqlserversdatabases}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsqlserversdatabases",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Authoring Execution] Microsoft.StreamAnalytics/streamingjobs msftstreamanalyticsstreamingjobs}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftstreamanalyticsstreamingjobs",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [BuiltinSqlReqsEnded GatewayApiRequests IntegrationActivityRuns IntegrationPipelineRuns IntegrationTriggerRuns SQLSecurityAuditEvents SynapseRbacOperations] Microsoft.Synapse/workspaces msftsynapseworkspaces}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsynapseworkspaces",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [BigDataPoolAppsEnded] Microsoft.Synapse/workspaces/bigDataPools msftsynapseworkspacesbigdatapools}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsynapseworkspacesbigdatapools",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [DmsWorkers ExecRequests RequestSteps SqlRequests SQLSecurityAuditEvents Waits] Microsoft.Synapse/workspaces/sqlPools msftsynapseworkspacessqlpools}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftsynapseworkspacessqlpools",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Ingress Management] Microsoft.TimeSeriesInsights/environments msfttimeseriesinsightsenvironments}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfttimeseriesinsightsenvironments",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [Ingress Management] Microsoft.TimeSeriesInsights/environments/eventsources msfttimeseriesinsightsenvironmentseventsources}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msfttimeseriesinsightsenvironmentseventsources",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{false [AppServiceEnvironmentPlatformLogs] microsoft.web/hostingenvironments msftwebhostingenvironments}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftwebhostingenvironments",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AppServiceAntivirusScanAuditLogs AppServiceAppLogs AppServiceAuditLogs AppServiceConsoleLogs AppServiceFileAuditLogs AppServiceHTTPLogs AppServiceIPSecAuditLogs AppServicePlatformLogs FunctionAppLogs] microsoft.web/sites msftwebsites}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftwebsites",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        },
        {
          "policyDefinitionReferenceId": "mon-{true [AppServiceAntivirusScanAuditLogs AppServiceAppLogs AppServiceAuditLogs AppServiceConsoleLogs AppServiceFileAuditLogs AppServiceHTTPLogs AppServiceIPSecAuditLogs AppServicePlatformLogs FunctionAppLogs] microsoft.web/sites/slots msftwebsitesslots}",
          "policyDefinitionId": "${current_scope_resource_id}/providers/Microsoft.Authorization/policyDefinitions/mon-msftwebsitesslots",
          "parameters": {
            "logAnalytics": {
              "value": "[parameters('logAnalytics')]"
            }
          }
        }
      ]
    }
  }
